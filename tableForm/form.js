document.addEventListener('DOMContentLoaded', () => {
    const table = document.querySelector('#data-table tbody');
    const addRowBtn = document.querySelector('#add-row-btn');

    // üîπ –î–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏
    addRowBtn.addEventListener('click', () => {
        const newRow = document.createElement('tr');
        const columns = table.closest('table').querySelectorAll('thead th');
        
        newRow.innerHTML = Array.from(columns).map((col, index) => {
            return index < columns.length - 1
                ? `<td contenteditable="true"></td>`
                : `<td>
                    <button class="save-btn">–°–æ—Ö—Ä–∞–Ω–∏—Ç—å</button>
                    <button class="delete-btn">–£–¥–∞–ª–∏—Ç—å</button>
                   </td>`;
        }).join('');
        
        table.appendChild(newRow);
    });

    // üîπ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–æ–∫ "–°–æ—Ö—Ä–∞–Ω–∏—Ç—å" –∏ "–£–¥–∞–ª–∏—Ç—å"
    table.addEventListener('click', async (e) => {
        const row = e.target.closest('tr');
        const id = row.dataset.id || '';
        const tableName = new URLSearchParams(window.location.search).get("table") || "oiltransfer";

        if (e.target.classList.contains('save-btn')) {
            // üîπ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
            const data = { id, table: tableName };
            
            row.querySelectorAll('td').forEach((td, index) => {
                const columnName = table.closest('table').querySelectorAll('thead th')[index].textContent;
                if (columnName !== '–î–µ–π—Å—Ç–≤–∏—è') {
                    data[columnName] = td.textContent.trim();
                }
            });

            console.log("üì§ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ:", data);

            try {
                const response = await fetch("/mapoilds/MapOil/tableForm/save.php", {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });
                

                const text = await response.text(); // –ß–∏—Ç–∞–µ–º –æ—Ç–≤–µ—Ç –∫–∞–∫ —Ç–µ–∫—Å—Ç
                console.log("üì• –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (—Å—ã—Ä–æ–π):", text);

                try {
                    const result = JSON.parse(text); // –ü—Ä–æ–±—É–µ–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å JSON
                    console.log("üì• JSON:", result);
                    
                    if (result.success) {
                        alert('‚úÖ –ó–∞–ø–∏—Å—å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∞!');
                        location.reload();
                    } else {
                        alert('‚ùå –û—à–∏–±–∫–∞: ' + result.error);
                    }
                } catch (jsonError) {
                    alert('‚ùå –û—à–∏–±–∫–∞ JSON! –°–µ—Ä–≤–µ—Ä –≤–µ—Ä–Ω—É–ª –Ω–µ JSON.');
                    console.error("‚ùå –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ JSON:", jsonError, text);
                }
            } catch (error) {
                console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏:", error);
                alert('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏! –ü—Ä–æ–≤–µ—Ä—å –∫–æ–Ω—Å–æ–ª—å.');
            }
        } 
        
        else if (e.target.classList.contains('delete-btn')) {
            // üîπ –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–∏
            if (!id) {
                row.remove(); // –ï—Å–ª–∏ ID –Ω–µ—Ç, –ø—Ä–æ—Å—Ç–æ —É–¥–∞–ª—è–µ–º —Å—Ç—Ä–æ–∫—É –∏–∑ —Ç–∞–±–ª–∏—Ü—ã
                return;
            }

            if (confirm('‚ùó –í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É –∑–∞–ø–∏—Å—å?')) {
                try {
                    const response = await fetch(`delete.php?table=${tableName}&id=${id}`, { method: 'GET' });

                    if (response.ok) {
                        row.remove();
                        alert('‚úÖ –ó–∞–ø–∏—Å—å —É–¥–∞–ª–µ–Ω–∞!');
                    } else {
                        alert('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è.');
                    }
                } catch (error) {
                    console.error("‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏:", error);
                    alert('‚ùå –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏!');
                }
            }
        }
    });
});
