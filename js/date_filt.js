document.addEventListener("DOMContentLoaded", async function () {
    console.log("üìÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ñ–∏–ª—å—Ç—Ä–∞...");

    const monthInput = document.getElementById('month-input');
    if (!monthInput) {
        console.error("‚ùå –≠–ª–µ–º–µ–Ω—Ç #month-input –Ω–µ –Ω–∞–π–¥–µ–Ω");
        return;
    }

    const now = new Date();
    const currentYear = now.getFullYear();
    const currentMonth = String(now.getMonth() + 1).padStart(2, '0');
    const monthStr = `${currentYear}-${currentMonth}`;

    monthInput.value = monthStr;

    const [year, month] = monthStr.split('-');
    await updateMapData(year, month);

    monthInput.addEventListener('change', async () => {
        const [selectedYear, selectedMonth] = monthInput.value.split('-');
        await updateMapData(selectedYear, selectedMonth);
    });
});


async function updateMapData(year, month) {
    console.log(`üìä –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∑–∞ ${year}-${month}`);

    const points = await fetchPointsFromDB();
    const oilTransferData = await fetchOilTransferFromDB(year, month);
    const reservoirs = await fetchReservoirVolumesFromDB(year, month);

    clearAllDataLayers();

    const zoomThreshold = 6;
    const currentZoom = map.getZoom();

    if (oilTransferData.length === 0 && reservoirs.length === 0) {
        console.warn("‚ö† –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –∑–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–µ—Å—è—Ü. –ö–∞—Ä—Ç–∞ –æ—á–∏—â–µ–Ω–∞.");
        dataLoaded = false;

        const msg = document.getElementById('no-data-message');
        if (msg) msg.style.display = 'block';

        return;
    }

    const msg = document.getElementById('no-data-message');
    if (msg) msg.style.display = 'none';

    // ‚úÖ –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–π –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –ø—Ä–∏ zoomend
    window.cachedPoints = points;
    window.cachedOilTransferData = oilTransferData;
    window.cachedReservoirs = reservoirs;

    const checkboxOne = document.getElementById('checkboxOne');
    const checkboxTwo = document.getElementById('checkboxTwo');

    // –û—Ç—Ä–∏—Å–æ–≤—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –∑—É–º –ø–æ–∑–≤–æ–ª—è–µ—Ç
    if (checkboxOne?.checked && oilTransferData.length > 0 && currentZoom >= zoomThreshold) {
        addMinimalistFlow(points, oilTransferData);
        await displayKenkiyakOilTotal(year, month, points);
    }

    if (checkboxTwo?.checked && reservoirs.length > 0 && currentZoom >= zoomThreshold) {
        addReservoirs(reservoirs);
    }

    dataLoaded = true;
    console.log("‚úÖ –ö–∞—Ä—Ç–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∞");
}



function clearAllDataLayers() {
    flowLayerGroup.clearLayers();
    minimalistFlowLayerGroup.clearLayers();
    reservoirLayerGroup.clearLayers();
    pointTanksLayer.clearLayers();
    technicalTanksLayer.clearLayers();
}



async function fetchReservoirVolumesFromDB(year, month) {
    try {
        const response = await fetch(`database/getReservoirData.php?year=${year}&month=${month}`);
        if (!response.ok) throw new Error(`–û—à–∏–±–∫–∞ HTTP: ${response.status}`);

        const reservoirData = await response.json();

        if (!Array.isArray(reservoirData)) {
            console.error("‚ùå –û—à–∏–±–∫–∞: –¥–∞–Ω–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–æ–≤ –Ω–µ –º–∞—Å—Å–∏–≤!", reservoirData);
            return [];
        }

        console.log(`üìä –û–±—ä–µ–¥–∏–Ω—ë–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –æ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–∞—Ö (${year}-${month}):`, reservoirData);
        return reservoirData;
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ä–µ–∑–µ—Ä–≤—É–∞—Ä–æ–≤:", error);
        return [];
    }
}



// –ü–æ–ª—É—á–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –¥–æ—Å—Ç—É–ø–Ω—É—é –¥–∞—Ç—É –∏–∑ –±–∞–∑—ã
async function getLatestAvailableMonth() {
    try {
        const response = await fetch('database/getAvailableDates.php');
        if (!response.ok) throw new Error("–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞—Ç");

        const dates = await response.json();
        if (dates.length === 0) return null;

        const latest = dates[0]; // –°–∞–º–∞—è –Ω–æ–≤–∞—è –¥–∞—Ç–∞
        return {
            year: latest.year,
            month: latest.month
        };
    } catch (error) {
        console.error("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –º–µ—Å—è—Ü–∞:", error);
        return null;
    }
}
