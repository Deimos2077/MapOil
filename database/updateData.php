<?php
header('Content-Type: application/json');
include 'db.php';

// –§–∞–π–ª –ª–æ–≥–æ–≤
$logFile = __DIR__ . '/debug_log.txt';

// –í–∫–ª—é—á–∞–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—à–∏–±–æ–∫
ini_set('log_errors', 1);
ini_set('error_log', $logFile);

// –°–æ–∑–¥–∞–µ–º —Ñ–∞–π–ª –ª–æ–≥–æ–≤, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
if (!file_exists($logFile)) {
    file_put_contents($logFile, "=== –õ–æ–≥ —Ñ–∞–π–ª —Å–æ–∑–¥–∞–Ω: " . date("Y-m-d H:i:s") . " ===\n");
}

// üìå –ß–∏—Ç–∞–µ–º JSON-–∑–∞–ø—Ä–æ—Å –∏ –ª–æ–≥–∏—Ä—É–µ–º –µ–≥–æ
$data = json_decode(file_get_contents('php://input'), true);
error_log("üì• –ü–æ–ª—É—á–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ: " . print_r($data, true));

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
if (!isset($data['id'], $data['table']) || !is_string($data['table'])) {
    error_log("‚ùå –û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ! JSON: " . json_encode($data));
    echo json_encode(['success' => false, 'error' => '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ']);
    exit;
}

// üìå –†–∞–∑—Ä–µ—à–µ–Ω–Ω—ã–µ —Ç–∞–±–ª–∏—Ü—ã
$allowedTables = ['oiltransfer', 'pipelines', 'points', 'reservoirs', 'reservoirvolumes'];
$table = $data['table'];

if (!in_array($table, $allowedTables)) {
    error_log("‚ùå –û—à–∏–±–∫–∞: –ü–æ–ø—ã—Ç–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º–æ–π —Ç–∞–±–ª–∏—Ü—ã: " . $table);
    echo json_encode(['success' => false, 'error' => '–ù–µ–¥–æ–ø—É—Å—Ç–∏–º–∞—è —Ç–∞–±–ª–∏—Ü–∞']);
    exit;
}

// üìå –ü—Ä–æ–≤–µ—Ä—è–µ–º ID –∑–∞–ø–∏—Å–∏
$id = (int) $data['id'];
if ($id <= 0) {
    error_log("‚ùå –û—à–∏–±–∫–∞: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID: " . $id);
    echo json_encode(['success' => false, 'error' => '–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID']);
    exit;
}

// üìå –£–¥–∞–ª—è–µ–º `pointId`, –µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å
if (isset($data['pointId'])) {
    error_log("‚ö†Ô∏è –£–¥–∞–ª—è–µ–º `pointId`: " . $data['pointId']);
    unset($data['pointId']);
}

// üìå –£–¥–∞–ª—è–µ–º id –∏ table –∏–∑ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
unset($data['id'], $data['table']);

if (empty($data)) {
    error_log("‚ö† –ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è.");
    echo json_encode(['success' => false, 'error' => '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è']);
    exit;
}

// üìå –§–æ—Ä–º–∏—Ä—É–µ–º SQL-–∑–∞–ø—Ä–æ—Å
$columns = array_keys($data);
$updateFields = implode(", ", array_map(fn($col) => "`$col` = :$col", $columns));
$sql = "UPDATE `$table` SET $updateFields WHERE id = :id";

// üìå –õ–æ–≥–∏—Ä—É–µ–º SQL-–∑–∞–ø—Ä–æ—Å –ø–µ—Ä–µ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ–º
error_log("üõ† SQL-–∑–∞–ø—Ä–æ—Å: " . $sql);
error_log("üìù –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: " . print_r($data, true));

// üìå –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –∑–∞–ø—Ä–æ—Å
$stmt = $pdo->prepare($sql);

// –ü—Ä–∏–≤—è–∑—ã–≤–∞–µ–º –ø–∞—Ä–∞–º–µ—Ç—Ä—ã
foreach ($data as $col => $value) {
    $stmt->bindValue(":$col", $value);
}
$stmt->bindValue(":id", $id, PDO::PARAM_INT);

try {
    $stmt->execute();
    if ($stmt->rowCount() > 0) {
        error_log("‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞! ID: $id");
        echo json_encode(['success' => true, 'message' => '–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞']);
    } else {
        error_log("‚ö† –ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –¥–ª—è –∑–∞–ø–∏—Å–∏ ID: $id");
        echo json_encode(['success' => false, 'error' => '–ù–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏–π –∏–ª–∏ –∑–∞–ø–∏—Å—å –Ω–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∞']);
    }
} catch (PDOException $e) {
    error_log("‚ùå –û—à–∏–±–∫–∞ –ë–î: " . $e->getMessage());
    echo json_encode(['success' => false, 'error' => '–û—à–∏–±–∫–∞ –ë–î: ' . $e->getMessage()]);
}
?>
